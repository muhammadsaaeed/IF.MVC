@model iForce.Core.Models.UserViewModel

<div class="modal-body">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserRoleId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserRoleId,
                            new SelectList(Model.RolesLookup, "key", "value"),
                            "Select Role",
                            new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.UserRoleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserStatusId,
                            new SelectList(Model.StatusesLookup, "key", "value"),
                            "Select Status",
                            new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserStatusId, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
</div>

<div class="modal-footer">
    <input type="submit" value="Save changes" class="btn btn-primary" />
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
</div>
